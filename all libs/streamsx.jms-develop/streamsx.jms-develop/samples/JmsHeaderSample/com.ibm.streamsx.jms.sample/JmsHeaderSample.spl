// *******************************************************************************
// * Copyright (C)2019, International Business Machines Corporation and          *
// * others. All Rights Reserved.                                                *
// *******************************************************************************                               
namespace com.ibm.streamsx.jms.sample;

/** JmsHeaderSample demonstrates how to send/read data to/from a messaging server
 *  using the JMSSink and JMSSource operators. Additionally, data is not only
 *  transmitted in the JMS message's body, but written and read from the
 *  JMS Header, too.
 * 
 *  This sample connects to a messaging server as specified in the connection 
 *  document located in ./etc/connections.xml.  The connection info, and the
 *  data schema for the message is defined in the connection document.
 * 
 *  The values used in the connection document connect to an ActiveMQ running locally.
 * 
 */

use com.ibm.streamsx.jms::* ;


composite JmsHeaderSample 
{
	param
		expression<rstring> $connectionDoc :	getSubmissionTimeValue("connectionDoc", "./etc/connections.xml") ;
		expression<rstring> $connection :		getSubmissionTimeValue("connection", "activemq") ;
		expression<rstring> $access :			getSubmissionTimeValue("access", "access_activemq") ;


	type
        MessageBodyData         = tuple<uint64 seqID, rstring msg> ;
        
        JMSHeader       		= tuple<rstring msgId,
        								int64	ts,
        								rstring destination,
        								int32	deliveryMode,
        								int32	priority,
        								rstring correlationId,
        								rstring jmsType
        								> ;

        JMSHeaderPropsSender	= tuple<rstring	inJhpString,
        								int64	inJhpLong,
        								float32	inJhpFloat,
        								boolean	inJhpBoolean,
        								ustring inUString
        								> ;
        								
        JMSHeaderPropsReceiver	= tuple<rstring receivedJhpString,
        								int64	receivedJhpLong,
        								float32	receivedJhpFloat,
        								boolean	receivedJhpBoolean,
        								ustring receivedUString
        								> ;
        
        SenderData		  		= MessageBodyData, JMSHeaderPropsSender ;
        ReveiverData		  	= JMSHeader, JMSHeaderPropsReceiver, MessageBodyData ;
		
	
	graph
		
		(stream<SenderData> InData) as DataReader = FileSource()
		{
			param
				file :					"testData.txt" ;
				format :				txt ;
				
			config
				placement : partitionIsolation ;
				
		}
		
		
//		() as TestDataDumper = FileSink(InData)
//		{
//			param
//				file :					"testDataDump.txt" ;
//				format :				txt ;
//				//quoteStrings :			false ;
//				flush :					1u ;
//				writePunctuations :		false ;
//				flushOnPunctuation :	true ;
//				
//			config
//				placement : partitionIsolation ;
//				
//		}   
		
		
		() as Producer = JMSSink(InData)
		{
			param
				connectionDocument :	$connectionDoc ;
				connection :			$connection ;
				access :				$access ;
				
				jmsHeaderProperties :	"headerPropString/inJhpString/string"
									+ 	",headerPropLong/inJhpLong/long"
									+ 	",headerPropFloat/inJhpFloat/float"
									+ 	",headerPropBoolean/inJhpBoolean/bool"
									+	",ustringValue/inUString/object";
				
			config
				placement : partitionIsolation ;
				
		}


/* ######################################################################################################################################### */
/* ######################################################################################################################################### */
/* ######################################################################################################################################### */


		(stream<ReveiverData> ReadDataWithHeaderProps) as Consumer = JMSSource()
		{
			param
				connectionDocument :			$connectionDoc ;
				connection :					$connection ;
				access :						$access ;
				initDelay :						4l ;

				jmsDestinationOutAttrName :     "destination";
				jmsDeliveryModeOutAttrName :    "deliveryMode";
				jmsPriorityOutAttrName :        "priority";
				jmsMessageIDOutAttrName :       "msgId";
				jmsTimestampOutAttrName :       "ts"; 
				jmsCorrelationIDOutAttrName :   "correlationId";
				jmsTypeOutAttrName :            "jmsType"; 
        
				jmsHeaderProperties :			"headerPropString/receivedJhpString/string"
											+ 	",headerPropLong/receivedJhpLong/long"
											+ 	",headerPropFloat/receivedJhpFloat/float"
											+ 	",headerPropBoolean/receivedJhpBoolean/bool"
											+	",ustringValue/receivedUString/object";
				
			config
				placement : partitionIsolation ;
		}


		() as ReceivedDataDumper = FileSink(ReadDataWithHeaderProps)
		{
			param
				file :					"actual.txt" ;
				format :				txt ;
				//quoteStrings :			false ;
				flush :					1u ;
				
			config
				placement : partitionIsolation ;
				
		}   

}
